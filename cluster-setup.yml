---

- name: Setup NFS shares
  hosts: "NFS-Host"
  vars:
    - coreos_shares: '["mongodb", "nginx"]'
  tasks:
    - name: Create nfs direktories
      file:
          path: "/srv/coreos-nfs-shares/{{ item }}"
          state: "directory"
          mode: 0755
      with_items: "{{ coreos_shares }}"
    - name: "Update nfs config"
      lineinfile:
          dest: "/etc/exports.d/coreos-cluster-shares.exports"
          line: "/srv/coreos-nfs-shares/{{ item }}  {{ clientsaccess }}"
          create: "yes"
          state: "present"
          mode: "0644"
      with_items: "{{ coreos_shares }}"
    - name: "refreash exportfs"
      shell: "exportfs -ra"

- name: Setup node configs
  hosts: CoreOS-VirtHost
  tasks:
    # This module is no supporting bz2 format
#  - name: Unarchive images
#    unarchive:
#        src: "{{ image_dir }}/coreos_production_qemu_image.img.bz2"
#        dest: "{{ image_dir }}/"
#        remote_src: "yes"
    - name: Download images
      get_url:
        url: https://stable.release.core-os.net/amd64-usr/current/coreos_production_qemu_image.img.bz2
        dest: "{{ image_dir }}/coreos_production_qemu_image.img.bz2"
        mode: 0440
    - name: Unarchive image
      command: "bzip2 -d -k ./coreos_production_qemu_image.img.bz2"
      args:
        chdir: "{{ image_dir }}"
        creates: "{{ image_dir }}/coreos_production_qemu_image.img"
    - name: Copy image
      command: "qemu-img create -f qcow2 -b ./coreos_production_qemu_image.img ./{{ item }}.qcow2"
      args:
        chdir: "{{ image_dir }}"
      with_items: "{{ coreos_nodes }}"
    - name: Create cloud config directory
      file:
          path: "{{ image_dir }}/{{ item }}/openstack/latest"
          state: "directory"
      with_items: "{{ coreos_nodes }}"
    - name: Create cloud config
      template:
          src: "user_data.j2"
          dest: "{{ image_dir }}/{{ item }}/openstack/latest/user_data"
      with_items: "{{ coreos_nodes }}"
    - name: Create virtual mashine
      command: |
            virt-install --connect qemu:///system --import \
                 --name {{ item }} \
                 --ram 1024 \
                 --vcpus 1 \
                 --os-type=linux \
                 --os-variant=virtio26 \
                 --disk path={{ image_dir }}/{{ item }}.qcow2,format=qcow2,bus=virtio \
                 --filesystem  {{ image_dir }}/{{ item }}/,config-2,type=mount,mode=squash \
                 --network bridge=virbr0 \
                 --vnc \
                 --noautoconsole
      with_items: "{{ coreos_nodes }}"
      ignore_errors: yes
    - name: Rebbot virtual mashine
      command: "virsh reboot {{ item }}"
      with_items: "{{ coreos_nodes }}"

- name: Node configs
  hosts: CoreOS-Node
  tasks:
    - name: Create virtual mashine
      command: "fleetctl submit ./mongodb.service ./nginx.service"
      args:
        chdir: "/tmp/"
    - name: Create virtual mashine
      command: "fleetctl start mongodb.service nginx.service"
#    - name: "check inventary"
#      debug:
#        msg: "echo  {{ hostvars[ item ].ansible_host}} {{ hostvars[ item ].inventory_hostname}} "
#      with_items: '{{ hostvars }}'
